getwd()
hw1_data <- read.csv("C:/Users/vPro/Desktop/Tech Shop/R/hw1_data.csv")
View(hw1_data)
read.table(hw1_data, nrows=2)
read.table("hw1_data", nrows=2)
read.csv("C:/Users/vPro/Desktop/Tech Shop/R/hw1_data.csv", nrows=2)
read.csv("C:/Users/vPro/Desktop/Tech Shop/R/hw1_data.csv", nrows)
class(hw1_data)
hw1_data(nrows)
nrows(hw1_data)
attributes(hw1_data)
hw1_data[152,153]
hw1_data[[152,153]]
hw1_data[[152]]
hw1_data[c(152,153)]
hw1_data[[152][153]]
hw1_data[[152]][[153]]
hw1_data[152:153,]
hw1_data[47,1]
is.na(hw1_data[,1])
attributes(is.nan)
x<-is.na(hw1_data[,1])
class(x)
x(TRUE)
x[TRUE]
x[FALSE]
x[[TRUE]]
x
x[x==TRUE]
x[x==FALSE]
x[x==TRUE]<-0
x
hw1_data[,1]
x<-is.na(hw1_data[,1])
y<-hw1_data[,1]
y[!x]
b<-y[!x]
m<-mean(b)
m
m<-hw1_data[hw1_data[,1]>30 & hw1_data[,4]>90,]
m
mean(m[,2])
d<-m[,2]
d
x<-is.na(d)
d[!x]
n<-d[!x]
mean(n)
mean(d[!is.na(d)])
x<-hw1_data[,5]
x<-hw1_data[hw1_data[,5]==6,]
x
mean(x[,4])
x<-[hw1_data[,5]==5,]
x<-hw1_data[hw1_data[,5]==5,]
max(x[,1])
max(!is.na(x[,1]))
x
y<-is.na(x[,1])
m<-max(y)
m
max(x[,1], na.rm=TRUE)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
swirl()
x<-matrix(1:6, 2,3)
x
nrow(x)
seq_len(nrow(x))
x<-as.Date("1970-01-01")
x
class(x)
unclass(x)
x
class(x)
x<-Sys.time()
x
p<-as.POSIXlt(x)
p
unclass(p)
names(unclass(p))
p$mday
p$wday
p$ysay
p$yday
Sys.time()
unclass(X)
x<-Sys.time()
x
unclass(x)
?strptime
swirl()
environment()
library(swirl)
swirl()
swirl()
swirl()
swirl()
2
swirl()
swirl()
swirl()
swirl()
swirl()
/swirl
?swirl()
swirl()
library(swirl)
swirl()
swirl()
x<-"simorasbimo"
x
length(x)
?na.omit
setwd("~/")
getwd(0)
getwd()
load('hw1_data'')
load('hw_data')
getwd()
setwd('R')
search()
?search
?library
library(iris)
library(datasets)
search()
?search
searchpaths()
searchpaths("GlobalEnv")
list.files("GlobalEnv", full.names=TRUE)
list.files(GlobalEnv, full.names=TRUE)
iris
search()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(c(1,9,2,8,3,7))
library(KernSmooth)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
vect<-makeVector()
vect$set(c(1,3,5,2,7))
vect$get
vect$get()
vect$setmean()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean(x)
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
vect<-makeVector()
vect$set(c(1,3,5,2,7))
vect$get()
vect$setmean()
summary(lm)
str(lm)
library(datasets)
head(airquality)
s<-split(airquality, airquality$Month)
str(s)
head(s)
str(qnorm)
?qnorm
sample(rnorm(1:10),5)
set.seed(1)
rpois(5,2)
?set.seed
?pnorm
"plyr" %in% rownames(installed.packages())
install.packages("plyr")
?arrange
?abline
?par
?with
library(datasets)
data("mtcars")
head(mtcars)
plot(mpg, cyl)
with(mtcars, plot(mpg, hp))
?par
par("pch")
pch
?Devices
library(datasets)
pdf(file="firstplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old faithful Geyser data")
dev.off()
getwd()
library(ggplot2)
require("ggplot2") %in% installed.packages()
install.packages(ggplot2)
install.packages("ggplot2")
swirl()
library(swirl)
swirl()
swirl()
swirl()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom= c("points","smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom= c("points""smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("points","smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv)
g = ggplot(mpg, aes=c(displ, hwy))
g = ggplot(mpg, aes(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point() + geom_smooth()
g+geom_point() + geom_smooth(method="lm")
g+geom_point() + geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) +ggtitle("Swirl Rules!")
g+geom_point() + geom_point(color="pink", size=4, alpha=1/2)
g + geom_point(color="pink", size=4, alpha=1/2)
g + geom_point(size=4, alpha=1/2, aes(color=drv))
g + geom_point(size=4, alpha=1/2, aes(color=drv), labs(title="Swirl Rules"), labs(x="Displacement", y="hwy Mileage"))
g + geom_point(size=4, alpha=1/2, aes(color=drv), labs(title="Swirl Rules!", x="Displacement", y="hwy Mileage"))
g + geom_point(size=4, alpha=1/2, aes(color=drv), labs(title="swirl Rules!"))
g + geom_point(size=4, alpha=1/2, aes(color=drv))
g + geom_point(size=4, alpha=1/2, aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="hwy Mileage")
g + geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="hwy Mileage")
g + geom_point(aes(color=drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv), size=2, alpha=1/2) +geom_smooth(size=4, linetype=3, method="lm", se= FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(data=testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line() +ylim(-3,3)
g+geom_line() + coord_cartesian(ylim=c(-3,3))
g<- ggplot(data=mpg, aes(x=displ, y=hwy, color=year))
g<- ggplot(data=mpg, aes(x=displ, y=hwy, color=factor(year))
g<- ggplot(data=mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point() +facet_grid(drv~cyl, margins= TRUE)
g + geom_point() +facet_grid(drv~cyl, margins= TRUE) +geom_smooth(method="lm",se=FALSE, size=2, color="black")
g + geom_point() +facet_grid(drv~cyl, margins= TRUE) +geom_smooth(method="lm",se=FALSE, size=2, color="black")
+labs(x="Displacement", y="Highway Mileage, title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
library(swirl)
swirl()
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut~car2)) + geom_smooth(method="lm", size=3, color="pink")
g + geom_point(alpha=1/3) + facet_grid(cut~car2) + geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
dit(dataFrame)
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col='blue')
abline(h=0.4, color='red')
abline(h=0.4, col='red')
5
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
1
library(swirl)
swirl()
swirl()
swirl()
cmat
points(cx, cy, col=c("red","orange", "purple"))
points(cx, cy, col=c("red","orange", "purple"), pch=3, cex=2, lwd=2)
mdist
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
newClust
points(x,y, pch=19, cex=2, col=cols1[newClust])
lapply(x, mean)
tapply(x, newClust, mean)
x
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y, newCx, newCy)
apply(ditTmp, 2, which.min)
apply(distTmp, 2, which.min)
apply(distTmp2, 2, which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2 )
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3 )
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPat.R", local=TRUE)
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]) %*% (svd1$d[1])
a1 <- (svd1$u[,1]) * (svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2])  %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2] %*% svd1$d[,1:2])  %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2]  %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% (svd1$d[1:2]  %*% t(svd1$v[,1:2]))
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2])  %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5])  %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5])  %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10])  %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
size(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob=c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace= TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- sample(c(0,1), 100, prob=c(0.3, 0.7))
flips2 <- sample(c(0,1), 100, replace= TRUE, prob=c(0.3, 0.7))
flips2 <- rbinom(100, 1, 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
plot(rnorm(10))
plot(rpois(10))
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
a = dnorm(x, mean = 30, sd = 4)
plot(dnorm(x, mean = 30, sd = 4))
qnorm(40, 30, 4)
pnorm(40, 30, 4)
a = c(pnorm(40, 30, 4), pnorm(21, 30, 4, lower.tail = FALSE), (pnorm(35, 30, 4) & pnorm(30, 30, 4, lower.tail = FALSE))
a = c(pnorm(40, 30, 4), pnorm(21, 30, 4, lower.tail = FALSE), (pnorm(35, 30, 4) & pnorm(30, 30, 4, lower.tail = FALSE)))
a
x = c(c(1,2,3), c(9,8,7), c(5,6,7))
x
x = matrix( c(1,9,2,8,3,7,4,6,5))
x
x = matrix( c(1,9,2,8,3,7,4,6,5), nrow=3, ncol=3)
x
diag(x)
sum(diag(x))
abs(5-6)
t(x)
matrix(1:16,4)
diag(x[-3,-1])
row(x)
col(x)
d = row(x) - col(x)
split(x, d)
Diagonal[x, 3-3]
?Reverse
??Reverse
x = c(3,5,7,2,1)
range(x)
x =list(c(1,3,5,2))
range(x)
Library(swirl)
library(swirl)
swirl()
swirl()
swirl()
library(swirl)
swirl()
setwd("C:/Users/vPro/Desktop/peer review/Coursera_get_clean_microproject")
